import requests
import os
import time
import multiprocessing 
import concurrent.futures

# Function to download image from URL and save it
def download_image(itration):
    # Send a GET request to the URL
    response = requests.get('https://services.gst.gov.in/services/captcha')
    folder = 'captcha'
    
    # Check if the request was successful
    if response.status_code == 200:
        # Extract the image filename from the URL
        filename = 'captcha_{}.png'.format(str(1+itration))
        # Create the folder if it doesn't exist
        if not os.path.exists(folder):
            os.makedirs(folder)
        # Save the image to the folder
        with open(os.path.join(folder, filename), 'wb') as f:
            f.write(response.content)
        print(f"Image downloaded: {filename}")
    else:
        print("Failed to download image.")

def main():
    with concurrent.futures.ThreadPoolExecutor(max_workers=8) as executor:
        # Submit 1000 tasks to the executor
        futures = [
            executor.submit(download_image, i) for i in range(1000)
        ]

        # Process results as they become available
        for future in concurrent.futures.as_completed(futures):
            try:
                result = future.result()
                print(result)
            except Exception as e:
                print(f"Error downloading image: {e}")


if __name__ == "__main__":
    main()